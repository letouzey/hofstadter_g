
Compute map (A 2) (seq 0 20).
(*
    0  1  2  3  4  5  6   7   8   9   10  11  12   13
 = [1; 2; 3; 4; 6; 9; 13; 19; 28; 41; 60; 88; 129; 189; 277; 406; 595;
       872; 1278; 1873]
*)

Compute map (fun n => (n,fopt 2 n)) (seq 0 200).

(*
 ( 0,  0)+(1, 1)
 ( 2,  1)+++(5, 4)    : entre [1] et [0;3]

 ( 6,  4)+(7, 5)
 ( 8,  5)++(10, 7)
 (11,  7)+++(14, 10)  : entre [1;5] et [0;6]
 (15, 10)+++(18, 13)  : entre [1;6] et [0;3;6]

 (19, 13)+(20, 14)
 (21, 14)+++(24, 17)  : entre [1;7] et [0;3;7]

 (25, 17)+(26, 18)
 (27, 18)++(29, 20)
 (30, 20)+++(33, 23)  : entre [1;8] et [0;3;8]

 (34, 23)+(35, 24)
 (36, 24)++(38, 26)
 (39, 26)+++(42, 29)  : entre [1;5;8] et [0;9]
 (43, 29)+++(46, 32)  : entre [1;9] et [0;3;9]

 (47, 32)+(48, 33)
 (49, 33)++(51, 35)
 (52, 35)+++(55, 38)  : entre [1;5;9] et [0;6;9]
 (56, 38)+++(59, 41)  : entre [1;6;9] et [0;3;6;9]

 (60, 41)+(61, 42)
 (62, 42)+++(65, 45)  : entre [1;10] et [0;3;10]

 (66, 45)+(67, 46)
 (68, 46)++(70, 48)
 (71, 48)+++(74, 51)  : entre [1;5;10] et [0;6;10]
 (75, 51)+++(78, 54)  : entre [1;6;10] et [0;3;6;10]

 (79, 54)+(80, 55)
 (81, 55)+++(84, 58)  : entre [1;7;10] et [0;3;7;10]

 (85, 58)+(86, 59)
 (87, 59)++(89, 61)
 (90, 61)+++(93, 64)  : entre [1;11] et [0;3;11]

 (94, 64)+(95, 65)
 (96, 65)++(98, 67)
 (99, 67)+++(102,70)  : entre [1;5;11] et [0;6;11]
 (103,70)+++(106,73)  : entre [1;6;11] et [0;3;6;11]

 (107, 73)+(108, 74)
 (109, 74)+++(112, 77) : entre [1;7;11] et [0;3;7;11]

 (113, 77)+(114, 78)
 (115, 78)++(117, 80)
 (118, 80)+++(121, 83) : entre [1;8;11] et [0;3;8;11]

 (122, 83)+(123, 84)
 (124, 84)++(126, 86)
 (127, 86)+++(130, 89) : [1; 5; 8; 11], [0; 12]
 (131, 89)+++(134, 92) : [1; 12], [0; 3; 12]

 (135, 92)+(136, 93)
 (137, 93)++(139, 95)
 (140, 95)+++(143, 98)  : [1; 5; 12], [0; 6; 12]
 (144, 98)+++(147, 101) : [1; 6; 12], [0; 3; 6; 12]

 (148, 101)+(149, 102)
 (150, 102)+++(153, 105) : [1; 7; 12], [0; 3; 7; 12]

 (154, 105)+(155, 106)
 (156, 106)++(158, 108)
 (159, 108)+++(162, 111) : [1; 8; 12], [0; 3; 8; 12]

 (163, 111)+(164, 112)
 (165, 112)++(167, 114)
 (168, 114)+++(171, 117) : [1; 5; 8; 12], [0; 9; 12]
 (172, 117)+++(175, 120) : [1; 9; 12], [0; 3; 9; 12]

 (176, 120)+(177, 121)
 (178, 121)++(180, 123)
 (181, 123)+++(184, 126) : [1; 5; 9; 12], [0; 6; 9; 12]
 (185, 126)+++(188, 129) : [1; 6; 9; 12], [0; 3; 6; 9; 12]

 (189, 129)+(190, 130)
 (191, 130)+++(194, 133) : [1; 13], [0; 3; 13]

 ...



On prend comme repères les nombres [0;...] (ceux avant un plat)
1=[0] 5=[0;3] 7=[0;4] 10=[0;5] 14=[0;6] 18=[0;3;6] 20=[0;7] 24=[0;3;7]...

### Cas A : [0;3;...]

 ... flat [1;3;...]=[4+;...] step [0;4+;...]

 suivi de B ou C (selon terme suivant de la decomp est 7+ ou 6)

### Cas B : [0;4;...]

 ... flat [1;4;...] step [2;4;....]=[5+;...] step [0;5+;...]

 suivi de C

### Cas C : [0;5+;...] (ou [0])

 ... flat [1;5+;...] step [2;5+;...] step [3;5+;...]=[3+;...] step [0;3+...]

 suivi de A ou C (selon que 5+=6+ ou que 5+=5)


En commençant à 1:

 0 03 04 05 06 036 07 037 047 08
 C A  B  C  C  A   C  A   B   C ...

c'est en lien avec la décomp de n-1 downshift 3 fois ie h^3(n-1) ie n-h(n) :
[] 0  1  2  3  03  4  04  14  5

 Suite engendrée par C->CA A->B B->C. Demonstration du lien avec h ?

 C
 CA
 CAB
 CAB.C (* dernier ++ avant-avant-dernier *)
 CABC.CA
 CABCCA.CAB
 CABCCACAB.CABC

*)

(* Première analyse d'autosimilarité (avec substitution plus compliquée)
Largeurs de blocs ?
24 2344 24 234 2344 2344 ...
A  C    A  B   C    C   A   C  A  B  C A  B  C  C A  B  C  C  A   C A  B  C
   []   0  1   2    3   03  4  04 14 5 05 15 25 6 06 16 26 36 036 7 07 17 27

Une autosimilarité (en prenant A=2 B=3 C=4) !

Substitution a->ac, b->abc, c->abcc

a
ac
acabcc
acabccacabcabccabcc

On prend comme repère les nombres [0;3;...]:
5=[0;3] 18=[0;3;6] 24=[0;3;7]  [0;3;8]  [0;3;9] [0;3;6;9] [0;3;10] [0;3;6;10]

([0;3] + map (+6) de
[]         [0]     [1]         [2]      [3]     [0;3]     [4]      [0;4] ...

...

#### Cas I : au départ [0;3;6;...]

 [0;3;6...] flat [1;3;6...]=[7+...] step [0;7+...] flat [1;7+...]
 puis maxstep
 [1;7+;...] step [2;7+;...] step [3;7+;...] step [0;3;7+] flat

 et retour au départ.

 C'est la situation "24" qui sera suivi d'un II ou III (selon que le terme
 suivant est 10+ ou 9, cf renorm(7;...) ). Ajout A2 7 -A2 6 = A2 4 = 6.
 (pour une croissance de +4)

#### Cas II : au départ [0;3;7;...]

 [0;3;7...] flat [1;3;7...]=[4;7...] step [0;4;7...] flat [1;4;7...]

 [1;4;7;...] step [2;4;7;...]=[8+;...] step [0;8+;...] flat [1;8+;...]
 puis maxstep
 [1;8+;...] step [2;8+;...] step [3;8+;...] step [0;3;8+] flat

 retour à la case départ (cas III). En sortie : renorm(8;...).
  Ajout A2 8 - A2 7 = A2 5 = 9 (pour une croissance de +6)

 Situation 234

#### Cas III : au départ [0;3;8+;...]

 [0;3;8+...] flat [1;3;8+...]=[4;8+...] step [0;4;8+...] flat [1;4;8+...]

 [1;4;8+;...] step [2;4;8+;...]=[5;8+;...] step [0;5;8+;...] flat [1;5;8+;...]
 puis maxstep
 [1;5;8+;...] step [2;5;8+;...] step [3;5;8+;...]=[6+;...] step [0;6+;...] flat
 puis maxstep
 [1;6+;...] step [2;6+;...] step [3;6+;...] step [0;3;6+] flat

 retour à la case départ:
 (8 --> 9+ donc III suivi de I
  9+ --> 6;9+ donc I)

 (8 --> 9+ donc III suivi de I
  9 --> 6;9 donc I suivi de III
  10+ --> 6;10+ donc I suivi de II)

 suite: renorm(6;8+;...)
  Ajout A2 6 = 13 (pour une croissance de +9)

 Situation 2344

#############
Bref, les blocs de base : 24 / 234 / 2344

Lien avec next_decomp shifté de +6

*)


##### Subsitutions réduites

Dans la première analyse, les substitutions qui apparaissaient sont

k=1: 

1->12
2->122

k=2:

1->13
2->123
3->1233

k général:

1->1(Sk)
2->12(Sk)
..
k->12...k(Sk)
Sk->12...k(Sk)(Sk)

Lien avec substitution "réduite" tau : Sk->(Sk)1 | n -> Sn pour n\in{1..k} :

Pour k=1

 sigma^n(1).1 = 1.tau^(2n-1)(2)
 sigma^n(2).1 = 1.tau^(2n-1)(12)

Pour k=2

 sigma^(n+1)(1).1 = 1.tau^(3n+1)(3)
 sigma^(n+1)(2).1 = 1.tau^(3n+1)(13)
 sigma^(n+1)(3).1 = 1.tau^(3n+1)(123)

Pour k=3

 sigma^(n+1)(1).1 = 1.tau^(4n+1)(4)
 sigma^(n+1)(2).1 = 1.tau^(4n+1)(14)
 sigma^(n+1)(3).1 = 1.tau^(4n+1)(124)
 sigma^(n+1)(4).1 = 1.tau^(4n+1)(1234)





