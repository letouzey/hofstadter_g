/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 20.12.1 ] */
/* [wxMaxima: input   start ] */
load("myround.mac");
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Etude de f4 (et des suites à 5 lettres et poly degré 5).
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
cround(x) := myround(float(rectform(x)));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
A:matrix([0,0,0,0,1],[1,0,0,0,0],[0,1,0,0,0],[0,0,1,0,0],[0,0,0,1,1]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
expand(charpoly(A,x));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
factor(charpoly(A,x));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
roots:map(rhs,allroots(charpoly(A,x)));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
theta:roots[5];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
tau:1/theta;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
ji:(1+%i*sqrt(3))/2;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cround(roots[1]-ji);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
alpha:roots[3];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
bar(z) := conjugate(z);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cround(theta^3-theta-1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cround(tau^3+tau^2-1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cabs(alpha);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cround(theta + alpha + bar(alpha));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cround(tau + 1/alpha + 1/bar(alpha)+1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cround(theta * alpha * bar(alpha)-1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cabs(alpha)^2;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cround(cabs(alpha)^2-tau);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cround(realpart(alpha)-(-theta)/2);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cround(alpha-(-theta/2+%i*theta*sqrt(3/4-tau^2)));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
eig:[tau^4,tau^5,tau^6,tau^7,tau^8];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cround(sum(tau^k,k,4,8)-1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Abis:matrix([1,0,0,0,1],[1,0,0,0,0],[0,1,0,0,0],[0,0,1,0,0],[0,0,0,1,0]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
expand(charpoly(Abis,x));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
myround(Abis.eig-theta*eig);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Q:tau^4*transpose([1,tau,tau^2,tau^3,tau^4]).[1,1,1,1,1]-ident(5);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Q44 : submatrix(5,Q,5);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
determinant(Q44);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Bbis : myround(submatrix(5,Q).submatrix(Abis,5).invert(Q44));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
B:matrix([-tau^4,-1,-1,-1],[tau,0,0,0],[-tau^6,1,0,0],[-tau^7,0,1,0]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
expand(charpoly(B,x));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
myround(expand(charpoly(B,x)*(x-theta)));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Diagonalisation de B
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
listpropji : cround([1,tau*bar(ji),-tau+tau^2*bar(ji),-tau*bar(ji)-tau^2+tau^3*bar(ji)]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
vectpropji : transpose(listpropji);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cround(B.vectpropji-ji*vectpropji);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cround(B.bar(vectpropji)-bar(ji)*bar(vectpropji));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
listpropalpha : cround([1,tau/alpha,-tau^6/alpha+tau/alpha^2,-tau^7/alpha-tau^6/alpha^2+tau/alpha^3]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
vectpropalpha : transpose(listpropalpha);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cround(B.vectpropalpha-alpha*vectpropalpha);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
M : transpose(apply('matrix,[listpropji,bar(listpropji),listpropalpha,bar(listpropalpha)]));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
IM : cround(invert(M));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
diagmat(a,b,c,d) := matrix([a,0,0,0],[0,b,0,0],[0,0,c,0],[0,0,0,d]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
diag : diagmat(ji,bar(ji),alpha,bar(alpha));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cround(IM.B.M - diag);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Bter : cround(M.diag.IM);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
vect_z : transpose([tau^4-1,tau^5,tau^6,tau^7]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cj : cround(M.diagmat(1,0,0,0).IM.vect_z);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cjbar : cround(M.diagmat(0,1,0,0).IM.vect_z);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cround(cj-bar(cjbar));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
ca : cround(M.diagmat(0,0,1,0).IM.vect_z);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cabar : cround(M.diagmat(0,0,0,1).IM.vect_z);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
cround(ca-bar(cabar));
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
Bnz (n) := 2*realpart(ji^n.cj)+2*realpart(alpha^n.ca);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
makelist(cround(Bnz(n)-(B^^n).vect_z),n,0,20);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
En paticulier Bnz[2] redonne delta2(n) = f4(n)-tau.n
Pour expliciter la divergence : somme des espacés de 6 (pour que ji^6n=1)
Alors sum(Bnz(6i),i,0,m-1) = O(m) où m est le nombre de termes donc un log
du nombre de départ.
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
delta2_Nm (m) := sum(Bnz(6*i)[2,1],i,0,m-1);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
l : makelist(delta2_Nm(m),m,1,30);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: comment start ]
Attention, au dela de m=30 la précision devient catastrophique
   [wxMaxima: comment end   ] */


/* [wxMaxima: input   start ] */
makelist(l[i+1]-l[i],i,1,29);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
2*realpart(cj)[2];
/* [wxMaxima: input   end   ] */



/* Old versions of Maxima abort on loading files that end in a comment. */
"Created with wxMaxima 20.12.1"$
